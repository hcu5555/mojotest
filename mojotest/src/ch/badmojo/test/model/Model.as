/** *	 Copyright 2009 Philipp Laeubli  *	 Licensed under the Apache License, Version 2.0 (the "License");  *	 you may not use this file except in compliance with the License.  *	 You may obtain a copy of the License at  *	  *	 http://www.apache.org/licenses/LICENSE-2.0  *	  *	 Unless required by applicable law or agreed to in writing, software  *	 distributed under the License is distributed on an "AS IS" BASIS,  *	 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *	 See the License for the specific language governing permissions and  *	 limitations under the License. */package ch.badmojo.test.model {	import ch.badmojo.test.model.ModelListener;		import flash.utils.Dictionary;		/**	 * @author phil	 */	public class Model {			private var _values : Dictionary;		private var _listeners : Array;		public static const UPDATE : String = "UPDATE";		public function Model() {			_values = new Dictionary();			_listeners = new Array();		}		public function addModelListener(listener : ModelListener) : void {			_listeners.push(listener);		}		public function removeModelListener(listener : ModelListener) : void {			var newArray : Array = new Array();			for each (var arrayObj : Object in _listeners) {				if(listener != arrayObj) {					newArray.push(arrayObj);				}			}			_listeners = newArray;		}		public function setProperty(name : String, value : Object) : void {			if(_values[name] != value) {				_values[name] = value;				modelChanged(name);			}		}		public function getProperty(name : String) : Object {			return _values[name];		}		public function hasProperty(name : String) : Boolean {			return _values[name] != null;		}		private function modelChanged(name : String) : void {			for each (var listener : ModelListener in _listeners) {				listener.modelChanged(name);							}		}		public function update(propertyName : String = UPDATE) : void {			modelChanged(propertyName);		}		protected function forceProperty(name : String, value : Object) : void {			_values[name] = value;			modelChanged(name);		}	}}